{"version":3,"sources":["ember-math-helpers/helpers/abs.js","ember-math-helpers/helpers/acos.js","ember-math-helpers/helpers/acosh.js","ember-math-helpers/helpers/add.js","ember-math-helpers/helpers/asin.js","ember-math-helpers/helpers/asinh.js","ember-math-helpers/helpers/atan.js","ember-math-helpers/helpers/atan2.js","ember-math-helpers/helpers/atanh.js","ember-math-helpers/helpers/cbrt.js","ember-math-helpers/helpers/ceil.js","ember-math-helpers/helpers/clz32.js","ember-math-helpers/helpers/cos.js","ember-math-helpers/helpers/cosh.js","ember-math-helpers/helpers/div.js","ember-math-helpers/helpers/exp.js","ember-math-helpers/helpers/expm1.js","ember-math-helpers/helpers/floor.js","ember-math-helpers/helpers/fround.js","ember-math-helpers/helpers/gcd.js","ember-math-helpers/helpers/hypot.js","ember-math-helpers/helpers/imul.js","ember-math-helpers/helpers/lcm.js","ember-math-helpers/helpers/log-e.js","ember-math-helpers/helpers/log10.js","ember-math-helpers/helpers/log1p.js","ember-math-helpers/helpers/log2.js","ember-math-helpers/helpers/max.js","ember-math-helpers/helpers/min.js","ember-math-helpers/helpers/mod.js","ember-math-helpers/helpers/mult.js","ember-math-helpers/helpers/pow.js","ember-math-helpers/helpers/random.js","ember-math-helpers/helpers/round.js","ember-math-helpers/helpers/sign.js","ember-math-helpers/helpers/sin.js","ember-math-helpers/helpers/sqrt.js","ember-math-helpers/helpers/sub.js","ember-math-helpers/helpers/tan.js","ember-math-helpers/helpers/tanh.js","ember-math-helpers/helpers/trunc.js"],"sourcesContent":["define(\"ember-math-helpers/helpers/abs\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.abs = abs;\n  _exports.default = void 0;\n\n  /**\n   * Uses `Math.abs` to take the absolute value of the number passed to the helper.\n   *\n   * ```hbs\n   * {{abs a}}\n   * ```\n   *\n   * @param {number} number The number to take the absolute value of\n   * @return {number} The absolute value of the passed number\n   */\n  function abs([number]) {\n    return Math.abs(number);\n  }\n\n  var _default = Ember.Helper.helper(abs);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/acos\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.acos = acos;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.acos` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{acos a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.acos`\n   * @return {number} The acos of the passed number\n   */\n  function acos([number]) {\n    return Math.acos(number);\n  }\n\n  var _default = Ember.Helper.helper(acos);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/acosh\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.acosh = acosh;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.acosh` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{acosh a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.acosh`\n   * @return {number} The acosh of the passed number\n   */\n  function acosh([number]) {\n    return Math.acosh(number);\n  }\n\n  var _default = Ember.Helper.helper(acosh);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/add\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.add = add;\n  _exports.default = void 0;\n\n  /**\n   * Sums two or more numbers\n   *\n   * ```hbs\n   * {{add a b}}\n   * ```\n   *\n   * @param {number[]} numbers A list of numbers to sum\n   * @return {number} The sum of all the passed numbers\n   */\n  function add(numbers) {\n    return numbers.reduce((a, b) => Number(a) + Number(b));\n  }\n\n  var _default = Ember.Helper.helper(add);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/asin\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.asin = asin;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.asin` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{asin a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.asin`\n   * @return {number} The asin of the passed number\n   */\n  function asin([number]) {\n    return Math.asin(number);\n  }\n\n  var _default = Ember.Helper.helper(asin);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/asinh\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.asinh = asinh;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.asinh` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{asinh a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.asinh`\n   * @return {number} The asinh of the passed number\n   */\n  function asinh([number]) {\n    return Math.asinh(number);\n  }\n\n  var _default = Ember.Helper.helper(asinh);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/atan\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.atan = atan;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.atan` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{atan a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.atan`\n   * @return {number} The atan of the passed number\n   */\n  function atan([number]) {\n    return Math.atan(number);\n  }\n\n  var _default = Ember.Helper.helper(atan);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/atan2\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.atan2 = atan2;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.atan2` on the numbers passed to the helper.\n   *\n   * ```hbs\n   * {{atan2 a b}}\n   * ```\n   *\n   * @param {number} number1 The first number to pass to `Math.atan2`\n   * @param {number} number2 The second number to pass to `Math.atan2`\n   * @return {number} The atan2 of the passed numbers\n   */\n  function atan2([number1, number2]) {\n    return Math.atan2(number1, number2);\n  }\n\n  var _default = Ember.Helper.helper(atan2);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/atanh\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.atanh = atanh;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.atanh` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{atanh a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.atanh`\n   * @return {number} The atanh of the passed number\n   */\n  function atanh([number]) {\n    return Math.atanh(number);\n  }\n\n  var _default = Ember.Helper.helper(atanh);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/cbrt\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.cbrt = cbrt;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.cbrt` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{cbrt a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.cbrt`\n   * @return {number} The cbrt of the passed number\n   */\n  function cbrt([number]) {\n    return Math.cbrt(number);\n  }\n\n  var _default = Ember.Helper.helper(cbrt);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/ceil\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.ceil = ceil;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.ceil` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{ceil a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.ceil`\n   * @return {number} The ceil of the passed number\n   */\n  function ceil([number]) {\n    return Math.ceil(number);\n  }\n\n  var _default = Ember.Helper.helper(ceil);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/clz32\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.clz32 = clz32;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.clz32` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{clz32 a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.clz32`\n   * @return {number} The clz32 of the passed number\n   */\n  function clz32([number]) {\n    return Math.clz32(number);\n  }\n\n  var _default = Ember.Helper.helper(clz32);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/cos\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.cos = cos;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.cos` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{cos a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.cos`\n   * @return {number} The cos of the passed number\n   */\n  function cos([number]) {\n    return Math.cos(number);\n  }\n\n  var _default = Ember.Helper.helper(cos);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/cosh\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.cosh = cosh;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.cosh` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{cosh a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.cosh`\n   * @return {number} The cosh of the passed number\n   */\n  function cosh([number]) {\n    return Math.cosh(number);\n  }\n\n  var _default = Ember.Helper.helper(cosh);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/div\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.div = div;\n  _exports.default = void 0;\n\n  /**\n   * Divides two or more numbers\n   *\n   * ```hbs\n   * {{div a b}}\n   * ```\n   *\n   * @param {number[]} numbers A list of numbers to divide\n   * @return {number} The result of dividing all the passed numbers\n   */\n  function div(numbers) {\n    return numbers.reduce((a, b) => Number(a) / Number(b));\n  }\n\n  var _default = Ember.Helper.helper(div);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/exp\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.exp = exp;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.exp` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{exp a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.exp`\n   * @return {number} The exp of the passed number\n   */\n  function exp([number]) {\n    return Math.exp(number);\n  }\n\n  var _default = Ember.Helper.helper(exp);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/expm1\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.expm1 = expm1;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.expm1` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{expm1 a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.expm1`\n   * @return {number} The expm1 of the passed number\n   */\n  function expm1([number]) {\n    return Math.expm1(number);\n  }\n\n  var _default = Ember.Helper.helper(expm1);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/floor\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.floor = floor;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.floor` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{floor a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.floor`\n   * @return {number} The floor of the passed number\n   */\n  function floor([number]) {\n    return Math.floor(number);\n  }\n\n  var _default = Ember.Helper.helper(floor);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/fround\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.fround = fround;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.fround` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{fround a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.fround`\n   * @return {number} The fround of the passed number\n   */\n  function fround([number]) {\n    return Math.fround(number);\n  }\n\n  var _default = Ember.Helper.helper(fround);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/gcd\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.gcd = gcd;\n  _exports.default = void 0;\n\n  /**\n   * Returns the greatest positive integer that divides each of two integers\n   *\n   * ```hbs\n   * {{gcd a b}}\n   * ```\n   *\n   * @param {number} number1 The first number\n   * @param {number} number2 The second number\n   * @return {number} The GCD of the two numbers passed\n   */\n  function gcd([number1 = 0, number2 = 0]) {\n    const a = Math.abs(number1);\n    const b = Math.abs(number2);\n\n    if (a === 0) {\n      return b;\n    }\n\n    if (b === 0) {\n      return a;\n    }\n\n    return gcd([b, a % b]);\n  }\n\n  var _default = Ember.Helper.helper(gcd);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/hypot\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.hypot = hypot;\n  _exports.default = void 0;\n\n  /**\n   * Takes two or more numbers, and returns the square root of the sum of squares of them using `Math.hypot`\n   *\n   * ```hbs\n   * {{max a b}}\n   * ```\n   *\n   * @param {number[]} numbers A list of numbers to pass to `Math.hypot`\n   * @return {number} The hypot of the set of numbers\n   */\n  function hypot(numbers) {\n    return Math.hypot(...numbers);\n  }\n\n  var _default = Ember.Helper.helper(hypot);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/imul\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.imul = imul;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.imul` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{imul a}}\n   * ```\n   *\n   * @param {number} number1 The first number to pass to `Math.imul`\n   * @param {number} number2 The second number to pass to `Math.imul`\n   * @return {number} The imul of the passed numbers\n   */\n  function imul([number1, number2]) {\n    return Math.imul(number1, number2);\n  }\n\n  var _default = Ember.Helper.helper(imul);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/lcm\", [\"exports\", \"ember-math-helpers/helpers/gcd\"], function (_exports, _gcd) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.lcm = lcm;\n  _exports.default = void 0;\n\n  /**\n   * Returns the smallest positive integer that is divisible by both number1 and number2\n   *\n   * ```hbs\n   * {{lcm a b}}\n   * ```\n   *\n   * @param {number} number1 The first number\n   * @param {number} number2 The second number\n   * @return {number} The LCM of the two numbers passed\n   */\n  function lcm([number1 = 0, number2 = 0]) {\n    return number1 === 0 || number2 === 0 ? 0 : Math.abs(number1 * number2) / (0, _gcd.gcd)([number1, number2]);\n  }\n\n  var _default = Ember.Helper.helper(lcm);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/log-e\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.logE = logE;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.log` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{log-e a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.log`\n   * @return {number} The log of the passed number\n   */\n  function logE([number]) {\n    return Math.log(number);\n  }\n\n  var _default = Ember.Helper.helper(logE);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/log10\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.log10 = log10;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.log10` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{log10 a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.log10`\n   * @return {number} The log10 of the passed number\n   */\n  function log10([number]) {\n    return Math.log10(number);\n  }\n\n  var _default = Ember.Helper.helper(log10);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/log1p\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.log1p = log1p;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.log1p` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{log1p a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.log1p`\n   * @return {number} The log1p of the passed number\n   */\n  function log1p([number]) {\n    return Math.log1p(number);\n  }\n\n  var _default = Ember.Helper.helper(log1p);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/log2\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.log2 = log2;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.log2` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{log2 a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.log2`\n   * @return {number} The log2 of the passed number\n   */\n  function log2([number]) {\n    return Math.log2(number);\n  }\n\n  var _default = Ember.Helper.helper(log2);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/max\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.max = max;\n  _exports.default = void 0;\n\n  /**\n   * Takes two or more numbers, and finds the max of the set using `Math.max`\n   *\n   * ```hbs\n   * {{max a b}}\n   * ```\n   *\n   * @param {number[]} numbers A list of numbers to pass to `Math.max`\n   * @return {number} The max of the set of numbers\n   */\n  function max(numbers) {\n    return Math.max(...numbers);\n  }\n\n  var _default = Ember.Helper.helper(max);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/min\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.min = min;\n  _exports.default = void 0;\n\n  /**\n   * Takes two or more numbers, and finds the min of the set using `Math.min`\n   *\n   * ```hbs\n   * {{min a b}}\n   * ```\n   *\n   * @param {number[]} numbers A list of numbers to pass to `Math.min`\n   * @return {number} The min of the set of numbers\n   */\n  function min(numbers) {\n    return Math.min(...numbers);\n  }\n\n  var _default = Ember.Helper.helper(min);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/mod\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.mod = mod;\n  _exports.default = void 0;\n\n  /**\n   * Takes the modulus of two or more numbers\n   *\n   * ```hbs\n   * {{mod a b}}\n   * ```\n   *\n   * @param {number[]} numbers A list of numbers to modulus\n   * @return {number} The modulus of all the passed numbers\n   */\n  function mod(numbers) {\n    return numbers.reduce((a, b) => Number(a) % Number(b));\n  }\n\n  var _default = Ember.Helper.helper(mod);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/mult\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.mult = mult;\n  _exports.default = void 0;\n\n  /**\n   * Multiplies two or more numbers\n   *\n   * ```hbs\n   * {{mult a b}}\n   * ```\n   *\n   * @param {number[]} numbers A list of numbers to multiply\n   * @return {number} The product of all the passed numbers\n   */\n  function mult(numbers) {\n    return numbers.reduce((a, b) => Number(a) * Number(b));\n  }\n\n  var _default = Ember.Helper.helper(mult);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/pow\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.pow = pow;\n  _exports.default = void 0;\n\n  /**\n   * Takes two or more numbers, using the first as the base number,\n   * then using each subsequent number as an exponent to the previous value\n   *\n   * ```hbs\n   * {{pow a b}}\n   * ```\n   *\n   * @param {number[]} numbers A list of numbers to pass to `Math.pow`\n   * @return {number} The base raised to all exponents\n   */\n  function pow(numbers) {\n    return numbers.reduce((base, exponent) => Math.pow(base, exponent));\n  }\n\n  var _default = Ember.Helper.helper(pow);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/random\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.random = random;\n  _exports.default = void 0;\n  const {\n    min,\n    max\n  } = Math; // @see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed#max(0, min(MAX_DECIMALS, decimals))));\n\n  const MAX_DECIMALS = 20; // 💡 Using Number.toFixed, we'll get rounding for free alongside\n  // decimal precision. We'll default to whole-number rounding simply\n  // by defaulting `decimals` to 0\n\n  const DEFAULT_OPTS = {\n    decimals: 0\n  };\n  /**\n   * Executes `Math.random` with the provided upper-bounded randoms, lower- and upper-bounded randoms, \n   * and the option to configure decimal precision.\n   *\n   * ```hbs\n   * {{random}} or {{random decimals=4}}\n   * ```\n   *\n   * ```hbs\n   * {{random 42}} or {{random 42 decimals=4}}\n   * ```\n   *\n   * ```hbs\n   * {{random 21 1797}} or {{random 21 1797 decimals=4}}\n   * ``` \n   *\n   * @param {number} upperBound\n   * @param {number} lowerBound\n   * @param {object} { decimals } decimal precision value\n   * @return {number} The random generated number\n   */\n\n  function random(params, {\n    decimals\n  } = DEFAULT_OPTS) {\n    // no positional args, but only an options hash from named args\n    if (typeof params === 'object' && !Ember.isArray(params)) {\n      decimals = typeof params.decimals !== 'undefined' ? params.decimals : DEFAULT_OPTS.decimals;\n      return +Math.random().toFixed(max(0, min(MAX_DECIMALS, decimals)));\n    } // one positional arg: treat it as an upper bound\n\n\n    if (params && params.length === 1) {\n      const [upperBound] = params;\n      return +(Math.random() * upperBound).toFixed(max(0, min(MAX_DECIMALS, decimals)));\n    } // two positional args: use them to derive upper and lower bounds\n\n\n    if (params && params.length === 2) {\n      let [lowerBound, upperBound] = params; // for convenience, swap if a higher number is accidentally passed first\n\n      if (upperBound < lowerBound) {\n        [lowerBound, upperBound] = [upperBound, lowerBound];\n      }\n\n      return +(lowerBound + Math.random() * (upperBound - lowerBound)).toFixed(max(0, min(MAX_DECIMALS, decimals)));\n    } // no positional or named args: just return Math.random() w/ default decimal precision\n\n\n    return +Math.random().toFixed(max(0, min(MAX_DECIMALS, decimals)));\n  }\n\n  var _default = Ember.Helper.helper(random);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/round\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.round = round;\n  _exports.default = void 0;\n\n  // adapted from:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round#Decimal_rounding\n\n  /**\n   * Decimal adjustment of a number.\n   *\n   * @param {Number} value The number.\n   * @param {Integer} exp The exponent (the 10 logarithm of the adjustment base).\n   * @return {Number} The adjusted value.\n   */\n  function decimalAdjust(value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math.round(value);\n    }\n\n    value = +value;\n    exp = +exp; // If the value is not a number or the exp is not an integer...\n\n    if (value === null || isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    } // If the value is negative...\n\n\n    if (value < 0) {\n      return -decimalAdjust(-value, exp);\n    } // Shift\n\n\n    value = value.toString().split('e');\n    value = Math.round(+`${value[0]}e${value[1] ? +value[1] - exp : -exp}`); // Shift back\n\n    value = value.toString().split('e');\n    return +`${value[0]}e${value[1] ? +value[1] + exp : exp}`;\n  }\n\n  function round(number, namedArgs) {\n    if (namedArgs) {\n      if (namedArgs.decimals) {\n        return decimalAdjust(number[0], -namedArgs.decimals);\n      }\n\n      if (namedArgs.exp) {\n        return decimalAdjust(number[0], namedArgs.exp);\n      }\n    }\n\n    return Math.round(number[0]);\n  }\n\n  var _default = Ember.Helper.helper(round);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/sign\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.sign = sign;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.sign` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{sign a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.sign`\n   * @return {number} The sign of the passed number\n   */\n  function sign([number]) {\n    return Math.sign(number);\n  }\n\n  var _default = Ember.Helper.helper(sign);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/sin\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.sin = sin;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.sin` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{sin a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.sin`\n   * @return {number} The sin of the passed number\n   */\n  function sin([number]) {\n    return Math.sin(number);\n  }\n\n  var _default = Ember.Helper.helper(sin);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/sqrt\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.sqrt = sqrt;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.sqrt` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{sqrt a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.sqrt`\n   * @return {number} The sqrt of the passed number\n   */\n  function sqrt([number]) {\n    return Math.sqrt(number);\n  }\n\n  var _default = Ember.Helper.helper(sqrt);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/sub\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.sub = sub;\n  _exports.default = void 0;\n\n  /**\n   * Subtracts two or more numbers\n   *\n   * ```hbs\n   * {{sub a b}}\n   * ```\n   *\n   * @param {number[]} numbers A list of numbers to subtract\n   * @return {number} The difference of all the passed numbers\n   */\n  function sub(numbers) {\n    return numbers.reduce((a, b) => Number(a) - Number(b));\n  }\n\n  var _default = Ember.Helper.helper(sub);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/tan\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.tan = tan;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.tan` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{tan a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.tan`\n   * @return {number} The tan of the passed number\n   */\n  function tan([number]) {\n    return Math.tan(number);\n  }\n\n  var _default = Ember.Helper.helper(tan);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/tanh\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.tanh = tanh;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.tanh` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{tanh a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.tanh`\n   * @return {number} The tanh of the passed number\n   */\n  function tanh([number]) {\n    return Math.tanh(number);\n  }\n\n  var _default = Ember.Helper.helper(tanh);\n\n  _exports.default = _default;\n});","define(\"ember-math-helpers/helpers/trunc\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.trunc = trunc;\n  _exports.default = void 0;\n\n  /**\n   * Executes `Math.trunc` on the number passed to the helper.\n   *\n   * ```hbs\n   * {{trunc a}}\n   * ```\n   *\n   * @param {number} number The number to pass to `Math.trunc`\n   * @return {number} The trunc of the passed number\n   */\n  function trunc([number]) {\n    return Math.trunc(number);\n  }\n\n  var _default = Ember.Helper.helper(trunc);\n\n  _exports.default = _default;\n});"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"engine-vendor.js"}